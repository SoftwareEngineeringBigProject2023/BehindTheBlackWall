name: dockercompose37235877509304208
services:
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:latest
    networks:
      elk: null
    ports:
      - mode: ingress
        target: 9200
        published: "9200"
        protocol: tcp
    volumes:
      - type: volume
        source: elasticsearch-data
        target: /usr/share/elasticsearch/data
        volume: {}
  kibana:
    container_name: kibana
    depends_on:
      elasticsearch:
        condition: service_started
        required: true
    image: docker.elastic.co/kibana/kibana:latest
    networks:
      elk: null
    ports:
      - mode: ingress
        target: 5601
        published: "5601"
        protocol: tcp
  logstash:
    container_name: logstash
    depends_on:
      elasticsearch:
        condition: service_started
        required: true
    image: docker.elastic.co/logstash/logstash:latest
    networks:
      elk: null
    ports:
      - mode: ingress
        target: 5000
        published: "5000"
        protocol: tcp
    volumes:
      - type: bind
        source: D:\aspdotnet\SEServer\logstash\config
        target: /usr/share/logstash/config
        bind:
          create_host_path: true
      - type: bind
        source: D:\aspdotnet\SEServer\logstash\pipeline
        target: /usr/share/logstash/pipeline
        bind:
          create_host_path: true
  redis:
    container_name: redis
    image: redis:latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 6379
        published: "5379"
        protocol: tcp
  seserver-auth:
    build:
      context: D:\aspdotnet\SEServer
      dockerfile: src/services/SEServer.Auth/SEServer.Auth/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: SEServer.Auth
      target: base
    container_name: seserver-auth
    depends_on:
      sqlserver:
        condition: service_started
        required: true
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: http://0.0.0.0:80
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: /.nuget/fallbackpackages
    image: seserverauth:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages --additionalProbingPath /.nuget/fallbackpackages  "/app/bin/Debug/net7.0/SEServer.Auth.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "5103"
        protocol: tcp
      - mode: ingress
        target: 50001
        published: "50001"
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: D:\aspdotnet\SEServer\src\services\SEServer.Auth\SEServer.Auth
        target: /app
        bind:
          create_host_path: true
      - type: bind
        source: D:\aspdotnet\SEServer
        target: /src
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\0\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: D:\NuGet\packages
        target: /.nuget/packages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages
        target: /.nuget/fallbackpackages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\0\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\0\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\0\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\0\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: D:\Microsoft Visual Studio\vs\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net7.0
        target: /TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: D:\Microsoft Visual Studio\vs\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net7.0
        target: /HotReloadProxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: D:\Microsoft Visual Studio\vs\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
  seserver-auth-dapr:
    command:
      - ./daprd
      - -app-id
      - seserver-auth
      - -app-port
      - "80"
      - -components-path
      - /components
      - -config
      - /configuration/seserver-config.yaml
    container_name: seserver-auth-dapr
    depends_on:
      seserver-auth:
        condition: service_started
        required: true
    image: daprio/daprd:latest
    network_mode: service:seserver-auth
    volumes:
      - type: bind
        source: D:\aspdotnet\SEServer\dapr\components
        target: /components
        bind:
          create_host_path: true
      - type: bind
        source: D:\aspdotnet\SEServer\dapr\configuration
        target: /configuration
        bind:
          create_host_path: true
  sqlserver:
    container_name: sqlserver
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: JWmTjvNnRfKcjvLo0r
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
    volumes:
      - type: volume
        source: seserver-sqlserver
        target: /var/opt/mssql
        volume: {}
  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin-slim:latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 9411
        published: "5411"
        protocol: tcp
networks:
  default:
    name: dockercompose37235877509304208_default
  elk:
    name: dockercompose37235877509304208_elk
volumes:
  elasticsearch-data:
    name: dockercompose37235877509304208_elasticsearch-data
  seserver-sqlserver:
    name: dockercompose37235877509304208_seserver-sqlserver